<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wechat.dao.PostMapper">
    <resultMap id="BaseResultMap" type="com.wechat.pojo.Post" >
        <id column="post_id" property="postId" jdbcType="INTEGER" />
        <id column="post_topic" property="postTopic" jdbcType="VARCHAR" />
        <result column="post_content" property="postContent" jdbcType="VARCHAR" />
        <result column="post_read" property="postRead" jdbcType="VARCHAR" />
        <result column="post_goodCount" property="postGoodCount" jdbcType="VARCHAR" />
        <result column="post_image" property="postImage" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="post_reward" property="postReward" jdbcType="VARCHAR" />
        <result column="post_type" property="postType" jdbcType="VARCHAR" />
        <result column="createtime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="updatetime" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="post_id" property="isPraise" />
    </resultMap>

    <select id="getPostByUser" parameterType="java.lang.String" resultMap="BaseResultMap">
         SELECT  * from  post WHERE user_id=#{userId}
    </select>
    <select id="countPostByUser" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT  COUNT(*) from  post WHERE user_id=#{userId}
    </select>
    <select id="getAllPost"  parameterType="java.lang.String" resultMap="BaseResultMap">
      SELECT
      p.post_id postId,
      p.post_read postRead,
      p.post_goodCount postGoodCount,
      p.post_topic postTopic,
      p.post_content postContent,
      p.post_image postImage,
      p.post_reward postReward,
      p.post_type postType,
      p.user_id userId,
      p.createtime createTime,
      p.updatetime updateTime,
      g.post_id isPraise
      FROM  post AS p
      LEFT JOIN good_post AS g ON g.post_id = p.post_id
      AND g.user_id=#{userId}
    </select>
    <delete id="deletPostById" parameterType="java.lang.Integer">
        DELETE from post where post_id=#{id}
    </delete>
    <update id="addPraiseById" parameterType="java.lang.Integer">
        UPDATE post SET post_goodCount=CAST (post_goodCount AS UNSIGNED) + 1 WHERE post_id = #{id};
    </update>
    <update id="reducePraiseById" parameterType="java.lang.Integer">
        UPDATE post SET post_goodCount=CAST (post_goodCount AS UNSIGNED) - 1 WHERE post_id = #{id};
    </update>
    <select id="isExist" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT  COUNT(*) from  post WHERE post_id = #{id}
    </select>

    <insert id="addGoodPost" parameterType="map">
        INSERT into good_post (post_id,user_id,createtime,updatetime),
        VALUES (#{postId},#{userId},NOW(),NOW())
    </insert>

    <select id="countGoodPost" parameterType="map">
        SELECT count(*) from good_post where user_id= #{userId} and post_id = #{postId}
    </select>

    <delete id="deleteGoodPost" parameterType="map">
        DELETE FROM good_post where user_id= #{userId} and post_id = #{postId}
    </delete>








</mapper>